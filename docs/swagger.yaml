definitions:
  dto.AttemptViewDTO:
    properties:
      amount:
        type: integer
      done:
        type: boolean
      id:
        type: integer
      problem_id:
        type: integer
      student_id:
        type: integer
    type: object
  dto.ClassViewDTO:
    properties:
      courses:
        items:
          $ref: '#/definitions/dto.CourseViewDTO'
        type: array
      id:
        type: integer
      number:
        type: string
      students:
        items:
          $ref: '#/definitions/dto.StudentViewDTO'
        type: array
      teachers:
        items:
          $ref: '#/definitions/dto.TeacherViewDTO'
        type: array
    type: object
  dto.CourseCreateDTO:
    properties:
      classes_ids:
        items:
          type: integer
        type: array
      description:
        type: string
      teachers_ids:
        items:
          type: integer
        type: array
      title:
        type: string
    required:
    - classes_ids
    - description
    - teachers_ids
    - title
    type: object
  dto.CourseViewDTO:
    properties:
      classes:
        items:
          $ref: '#/definitions/dto.ClassViewDTO'
        type: array
      description:
        type: string
      id:
        type: integer
      problems:
        items:
          $ref: '#/definitions/dto.ProblemViewDTO'
        type: array
      teachers:
        items:
          $ref: '#/definitions/dto.TeacherViewDTO'
        type: array
      title:
        type: string
    type: object
  dto.ProblemViewDTO:
    properties:
      attempts:
        items:
          $ref: '#/definitions/dto.AttemptViewDTO'
        type: array
      course_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      students:
        items:
          $ref: '#/definitions/dto.StudentViewDTO'
        type: array
      title:
        type: string
    type: object
  dto.RegistrationDTO:
    properties:
      class:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - class
    - email
    - name
    - password
    type: object
  dto.StudentViewDTO:
    properties:
      class_id:
        type: integer
      courses:
        items:
          $ref: '#/definitions/dto.CourseViewDTO'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  dto.TeacherViewDTO:
    properties:
      classes:
        items:
          $ref: '#/definitions/dto.ClassViewDTO'
        type: array
      courses:
        items:
          $ref: '#/definitions/dto.CourseViewDTO'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/student/login:
    post:
      consumes:
      - application/json
      description: Create course and return it
      parameters:
      - description: Course creation data
        in: body
        name: createData
        required: true
        schema:
          $ref: '#/definitions/dto.CourseCreateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CourseViewDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create course
      tags:
      - courses
  /api/student/logout:
    post:
      consumes:
      - application/json
      description: Logout endpoint for student
      produces:
      - application/json
      responses:
        "200":
          description: logged out
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Logout
      tags:
      - student/auth
  /api/student/my_courses:
    get:
      consumes:
      - application/json
      description: Returns all student's courses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CourseViewDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: GetMyCourses
      tags:
      - student/courses
  /api/student/registration:
    post:
      consumes:
      - application/json
      description: Registration endpoint for student
      parameters:
      - description: Data for registration student
        in: body
        name: registrationData
        required: true
        schema:
          $ref: '#/definitions/dto.RegistrationDTO'
      produces:
      - application/json
      responses:
        "200":
          description: registration successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: StudentRegister
      tags:
      - student/auth
swagger: "2.0"
